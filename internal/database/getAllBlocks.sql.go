// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: getAllBlocks.sql

package database

import (
	"context"
)

const getBAllBlocks = `-- name: GetBAllBlocks :many
SELECT blockhash, confirmations, height, version, version_hex, merkle_root, time, median_time, nonce, bits, difficulty, chainwork, ntx, previous_block_hash, next_block_hash, stripped_size, size, weight FROM blocks
`

func (q *Queries) GetBAllBlocks(ctx context.Context) ([]Block, error) {
	rows, err := q.db.QueryContext(ctx, getBAllBlocks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Block
	for rows.Next() {
		var i Block
		if err := rows.Scan(
			&i.Blockhash,
			&i.Confirmations,
			&i.Height,
			&i.Version,
			&i.VersionHex,
			&i.MerkleRoot,
			&i.Time,
			&i.MedianTime,
			&i.Nonce,
			&i.Bits,
			&i.Difficulty,
			&i.Chainwork,
			&i.Ntx,
			&i.PreviousBlockHash,
			&i.NextBlockHash,
			&i.StrippedSize,
			&i.Size,
			&i.Weight,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
